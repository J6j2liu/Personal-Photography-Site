"use client"

import { Tab, TabGroup, TabList, TabPanel, TabPanels } from "@headlessui/react";
import Head from "next/head";
import Link from "next/link";
import Masonry from "react-masonry-css";
import classNames from "classnames";
import Image from "next/image";

import type { LightGallery } from "lightgallery/lightgallery";
import LightGalleryComp from 'lightgallery/react';

import 'lightgallery/css/lightgallery.css';
import 'lightgallery/css/lg-zoom.css';
import 'lightgallery/css/lg-thumbnail.css';

import lgThumbnail from 'lightgallery/plugins/thumbnail';
import lgZoom from 'lightgallery/plugins/zoom';

import reb0 from "/public/reb0.jpg";
import reb1 from "/public/reb1.jpg";
import reb2 from "/public/reb2.jpg";
import reb3 from "/public/reb3.jpg";
import reb4 from "/public/reb4.jpg";
import reb5 from "/public/reb5.jpg";
import reb6 from "/public/reb6.jpg";
import reb7 from "/public/reb7.jpg";
import reb8 from "/public/reb8.jpg";
import reb9 from "/public/reb9.jpg";
import reb10 from "/public/reb10.jpg";
import { useRef } from "react";


const tabs = [
  {
    key: 'all',
    display: 'All'
  },
  {
    key: 'Reb',
    display: 'Rebecca'
  },
  {
    key: 'Claire',
    display: 'Claire'
  },
]

const images = [
  reb0,
  reb1,
  reb2,
  reb3,
  reb4,
  reb5,
  reb6,
  reb7,
  reb8,
  reb9,
  reb10,
]

export default function Home() {

  const lightboxRef = useRef<LightGallery | null>(null);

  return (
    <div className="h-full overflow-auto">
      <Head>
        <title>Website</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Image
        className="fixed left-0 top-0 z-0"
        src={reb10}
        alt="bg"
        placeholder="blur"
        priority
      />

      <div className="fixed left-0 top-0 w-full h-full bg-gradient-to-t from-stone-900 z-10"></div>

      <header className="fixed top-0 w-full z-30 flex justify-between items-center h-[90px] px-10">
        <span className="uppercase text-lg font-medium">I need money</span>
        <Link href="#" className="rounded-3xl bg-white text-stone-700 px-3 py-2 hover:bg-opacity-90">
          Get in touch
        </Link>

      </header>

      <main className="relative pt-[110px] z-20">
        <div className="flex flex-col h-full items-center">
          <TabGroup className="flex flex-col items-center w-full h-full">
            <TabList className="flex item-center gap-12">
              {tabs.map(tab => (
                <Tab key={tab.key} className="px-2">
                  {({ selected }) => (
                    <span className={classNames("uppercase text-lg", selected ? "text-white" : "text-stone-600")}>
                      {tab.display}
                    </span>
                  )}
                </Tab>
              ))}
            </TabList>
            <TabPanels className="h-full max-w-[900px] w-full p-2 sm:p-4 my-6">
              <TabPanel>
                <Masonry breakpointCols={2} className="flex gap-4" columnClassName="">
                  {images.map((image, idx) => (
                    <Image
                      key={image.src}
                      src={image}
                      alt="reb1"
                      className="my-4 cursor-pointer"
                      placeholder="blur"
                      onClick={() => {
                        lightboxRef.current?.openGallery(idx)
                      }}
                    />
                  )
                  )}
                </Masonry>

                <LightGalleryComp
                  onInit={(ref) => {
                    if (ref) {
                      lightboxRef.current = ref.instance;
                    }
                  }}
                  speed={500}
                  plugins={[lgThumbnail, lgZoom]}
                  dynamic
                  dynamicEl={images.map(image => ({
                    src: image.src,
                    thumb: image.src
                  }))}
                >
                </LightGalleryComp>
              </TabPanel>
              <TabPanel>Rebecca</TabPanel>
              <TabPanel>Claire</TabPanel>
            </TabPanels>
          </TabGroup>
        </div>
      </main>

      <footer className="relative h-[90px] flex justify-center align-center uppercase text-lg font-medium z-20">
        <p>Placeholder for footer</p>
      </footer>
    </div>
  );
}
