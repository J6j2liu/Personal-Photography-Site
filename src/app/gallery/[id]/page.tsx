"use client"

import { Tab, TabGroup, TabList, TabPanel, TabPanels } from "@headlessui/react";
import Head from "next/head";
import Link from "next/link";
import Masonry from "react-masonry-css";
import classNames from "classnames";
import Image, { StaticImageData } from "next/image";

import { reb, claire, dic } from "../../_images";

export default function Page({ params }: { params: { id: string } }) {

    return (
        <div className="h-full overflow-auto">
            <Head>
                <title>Website</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="relative pt-[110px] z-20">
                <div className="text-center uppercase text-xl">{params.id}</div>

                <div className="flex flex-col h-full items-center">
                    <Masonry breakpointCols={2} className="flex gap-4 h-full max-w-[900px] w-full p-2 sm:p-4 my-6">
                        {dic[params.id].map((image, idx) => (
                            <Image
                                key={image.src}
                                src={image}
                                alt="reb1"
                                className="my-4 cursor-pointer"
                                placeholder="blur"
                            />
                        )
                        )}
                    </Masonry>
                    {/* <TabGroup className="flex flex-col items-center w-full h-full">
                        <TabList className="flex item-center gap-12">
                            {tabs.map(tab => (
                                <Tab key={tab.key} className="px-2">
                                    {({ selected }) => (
                                        <span className={classNames("uppercase text-lg", selected ? "text-white" : "text-stone-600")}>
                                            {tab.display}
                                        </span>
                                    )}
                                </Tab>
                            ))}
                        </TabList>
                        <TabPanels >
                            {tabers.map((taber) => (
                                <TabPanel key={taber.key}>

                                </TabPanel>
                            ))}
                        </TabPanels>
                    </TabGroup> */}
                </div>
            </main>

            <footer className="relative h-[90px] flex justify-center align-center uppercase text-lg font-medium z-20">
                <p>Placeholder for footer</p>
            </footer>
        </div>
    );
}

